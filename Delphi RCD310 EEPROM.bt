//------------------------------------------------
//--- 010 Editor v14.0.1 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

struct DELPHI_RCD310_EEPROM;

string RecordComment(DELPHI_RCD310_EEPROM &r)
{
    local int i = 0;
    local byte bs[4];
    for (i; i < 4; i++) {
        // The +48 is to convert it to an ASCII string.
        bs[i] = (r.code_bytes[i] ^ 0x65) + 48;
    }
    //local string s;
    //SPrintf(s, "%X", bs);
    return "Code: " + bs;
}

struct DELPHI_RCD310_EEPROM {
    //BLOCK block[8] <comment=RecordComment>;
    //BLOCK block <comment=RecordComment>;
    byte data[0xA0];
    byte code_bytes[4];
    byte unk1;
    
    // Weboctopus resets the error counter by setting this to 07 35
    // https://www.weboctopus.nl/rcd310-rcd510-navi-radio-code-calculator.php?radio_algo=rcd310_old#calculator
  
    // Values I have seen:
    // 0x07 36 = 0
    // 0xFF FF = 1
    // 0x07 35 = 1
    // 0x07 35 = 2
    short checksum1;
    // Or checksum?
    
    byte unk3[2];
    char sw_ver[4];
    char unk_or_sw_ver[11];
    char unk2[73 - 2 - 4 - 11];
    char name_and_hw_ver[0x10];
    byte unk4[588];
    byte unk5;
    byte zero6;
    byte error_counter_2_maybe;
    byte unk0x63;
    uint checksum2;
    
    byte the_rest[3244];
} delphi_rcd310_eeprom <open=true, comment=RecordComment>;


//local int off = 0;
//for (off = 0; off < 0x8000; off += 0x1000) {
//    Printf("%4X: %X\n", off, Checksum(CHECKSUM_CRC16, off, 0x1000-1));
//}